"""create covers table

Revision ID: dd80b8ef47ed
Revises: bada262bb9fe
Create Date: 2024-12-08 15:32:20.543578

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "dd80b8ef47ed"
down_revision: Union[str, None] = "bada262bb9fe"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("DROP TYPE IF EXISTS difficultenum;")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "covers",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("gender", sa.Boolean(), nullable=False),
        sa.Column("members", sa.Integer(), nullable=False),
        sa.Column("difficult", sa.Enum("EASY", "MIDDLE", "HARD", name="difficultenum"), nullable=False),
        sa.Column("publish_date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("covers")
    # ### end Alembic commands ###
